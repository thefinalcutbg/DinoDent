CREATE TABLE practice_doctor (practice_rzi VARCHAR NOT NULL REFERENCES practice ON DELETE CASCADE ON UPDATE CASCADE, doctor_lpk VARCHAR NOT NULL, admin BOOLEAN NOT NULL, specialty INT NOT NULL, FOREIGN KEY (doctor_lpk) REFERENCES doctor (lpk) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE financial (rowid INTEGER PRIMARY KEY, practice_rzi VARCHAR (10) NOT NULL REFERENCES practice (rzi) ON DELETE CASCADE ON UPDATE CASCADE, date TEXT NOT NULL DEFAULT '1900-01-01', num BIGINT NOT NULL, type INT NOT NULL, month_notif INT, recipient_id VARCHAR (100), recipient_name, recipient_phone VARCHAR (20), recipient_address, data TEXT NOT NULL);
CREATE TABLE periostatus (rowid INTEGER NOT NULL PRIMARY KEY, patient_rowid INTEGER NOT NULL REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE, date TEXT NOT NULL DEFAULT '1900-01-01', lpk VARCHAR (9) NOT NULL REFERENCES doctor (lpk) ON DELETE CASCADE ON UPDATE CASCADE, rzi VARCHAR (10) NOT NULL REFERENCES practice (rzi) ON DELETE CASCADE ON UPDATE CASCADE, data VARCHAR NOT NULL, FOREIGN KEY (patient_rowid) REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE note (patient_rowid INTEGER NOT NULL, tooth INT NOT NULL, text VARCHAR NOT NULL, PRIMARY KEY (patient_rowid, tooth), FOREIGN KEY (patient_rowid) REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE numMed (rowid INTEGER NOT NULL PRIMARY KEY, name VARCHAR NOT NULL, form INT NOT NULL);
CREATE TABLE prescription (rowid INTEGER PRIMARY KEY NOT NULL, patient_rowid INTEGER REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE, lrn VARCHAR (36) NOT NULL, nrn VARCHAR (12), date TEXT (10) NOT NULL, dispensation INT NOT NULL, repeats INT, supplements VARCHAR (2000), lpk VARCHAR REFERENCES doctor (lpk) ON UPDATE CASCADE NOT NULL, rzi VARCHAR REFERENCES practice (rzi) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);
CREATE TABLE num_update(name VARCHAR NOT NULL UNIQUE, date TEXT NOT NULL);
CREATE TABLE medication (rowid INTEGER PRIMARY KEY NOT NULL, prescription_rowid INTEGER REFERENCES prescription (rowid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, numMed_rowid INTEGER NOT NULL, is_form BOOLEAN NOT NULL, quantity INT NOT NULL, priority INT, substitution BOOLEAN, notes VARCHAR (2000), dosage TEXT);
CREATE TABLE doctor (lpk VARCHAR (9) NOT NULL PRIMARY KEY,pass VARCHAR NOT NULL,fname VARCHAR (50) NOT NULL,mname VARCHAR NOT NULL,lname VARCHAR (50) NOT NULL,phone VARCHAR NOT NULL, egn VARCHAR (10) NOT NULL, several_rhif INTEGER, auto_login BOOLEAN NOT NULL DEFAULT (0), his_specialty INTEGER);
CREATE TABLE practice (rzi VARCHAR NOT NULL PRIMARY KEY, name VARCHAR NOT NULL, bulstat VARCHAR NOT NULL, firm_address VARCHAR, practice_address INTEGER, pass VARCHAR NOT NULL, legal_entity INT, vat VARCHAR, nhif_contract VARCHAR, settings VARCHAR);
CREATE TABLE patient (rowid INTEGER PRIMARY KEY, type INT NOT NULL, id VARCHAR (10) NOT NULL, birth VARCHAR (10) NOT NULL, sex BOOLEAN NOT NULL, fname VARCHAR (50) NOT NULL, mname VARCHAR (50), lname VARCHAR (50)  NOT NULL, ekatte INT NOT NULL, address VARCHAR (100), hirbno VARCHAR (8), phone VARCHAR (20) );
CREATE TABLE medical_status (patient_rowid INTEGER NOT NULL, nrn TEXT, data TEXT NOT NULL, type INTEGER NOT NULL, FOREIGN KEY (patient_rowid) REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE amblist (rowid INTEGER NOT NULL PRIMARY KEY, nrn TEXT, lrn TEXT NOT NULL, based_on TEXT, his_updated NUMERIC NOT NULL, patient_rowid INTEGER NOT NULL, date TEXT NOT NULL DEFAULT ('1900-01-01T00:00:00'), num INT NOT NULL, lpk VARCHAR (9) NOT NULL REFERENCES doctor (lpk) ON UPDATE CASCADE, nhif_spec INT, nhif_unfav INT, rzi VARCHAR (10) REFERENCES practice (rzi) ON UPDATE CASCADE NOT NULL, status VARCHAR, FOREIGN KEY (patient_rowid) REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE referral (rowid INTEGER PRIMARY KEY NOT NULL, amblist_rowid INTEGER REFERENCES amblist (rowid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, type INTEGER NOT NULL, number INTEGER, nrn TEXT, lrn TEXT, date TEXT NOT NULL, reason INTEGER, diag_main TEXT NOT NULL, diag_add TEXT, comorb_main TEXT, comorb_add TEXT, tooth INTEGER, reason_119 INTEGER, motives_119 TEXT, spec_119 INTEGER);
CREATE TABLE procedure (rowid INTEGER NOT NULL PRIMARY KEY, amblist_rowid INTEGER NOT NULL, date TEXT NOT NULL DEFAULT '1900-01-01', financing_source INT NOT NULL, code VARCHAR (10) NOT NULL, diagnosis INTEGER NOT NULL DEFAULT (0), diagnosis_description TEXT, notes TEXT, his_index INT, at_tooth_index INT DEFAULT(-1), temporary INT, supernumeral INT, from_tooth_index INT,  to_tooth_index INT, post INT, surface_o INT, surface_m INT, surface_d INT, surface_b INT, surface_l INT, surface_c INT, minutes INT, removed INT NOT NULL DEFAULT (0), FOREIGN KEY (amblist_rowid) REFERENCES amblist (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
PRAGMA user_version = 9;