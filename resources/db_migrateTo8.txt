PRAGMA foreign_keys = 0;
CREATE TABLE sqlitestudio_temp_table AS SELECT * FROM patient;
DROP TABLE patient;
CREATE TABLE patient (rowid INTEGER PRIMARY KEY, type INT NOT NULL, id VARCHAR (10) NOT NULL, birth VARCHAR (10) NOT NULL, sex BOOLEAN NOT NULL, fname VARCHAR (50) NOT NULL, mname VARCHAR (50), lname VARCHAR (50)  NOT NULL, ekatte INT NOT NULL, address VARCHAR (100), hirbno VARCHAR (8), phone VARCHAR (20) );
INSERT INTO patient (rowid,type,id,birth,sex,fname,mname,lname,ekatte,address,hirbno,phone) SELECT rowid, type, id, birth, sex, fname, mname, lname, ekatte, address, hirbno, phone FROM sqlitestudio_temp_table;
DROP TABLE sqlitestudio_temp_table;
CREATE TABLE medical_status (patient_rowid INTEGER NOT NULL, nrn TEXT, data TEXT NOT NULL, type INTEGER NOT NULL, FOREIGN KEY (patient_rowid) REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE temp_amb AS SELECT * FROM amblist;
DROP TABLE amblist;
CREATE TABLE amblist (rowid INTEGER NOT NULL PRIMARY KEY, nrn TEXT, lrn TEXT NOT NULL, based_on TEXT, his_updated NUMERIC NOT NULL, patient_rowid INTEGER NOT NULL, date TEXT NOT NULL DEFAULT ('1900-01-01T00:00:00'), num INT NOT NULL, lpk VARCHAR (9) NOT NULL REFERENCES doctor (lpk) ON UPDATE CASCADE, nhif_spec INT, nhif_unfav INT, rzi VARCHAR (10) REFERENCES practice (rzi) ON UPDATE CASCADE NOT NULL, status VARCHAR, FOREIGN KEY (patient_rowid) REFERENCES patient (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE temp_proc AS SELECT * FROM procedure;
DROP TABLE procedure;
CREATE TABLE procedure (rowid INTEGER NOT NULL PRIMARY KEY, amblist_rowid INTEGER NOT NULL, date TEXT NOT NULL DEFAULT '1900-01-01', financing_source INT NOT NULL, code VARCHAR (10) NOT NULL, tooth INT NOT NULL, deciduous INT NOT NULL, data VARCHAR NOT NULL, diagnosis INTEGER NOT NULL DEFAULT (0), additional_diagnosis TEXT, hyperdontic INTEGER,notes TEXT, his_index INTEGER, removed INTEGER NOT NULL DEFAULT (0), FOREIGN KEY (amblist_rowid) REFERENCES amblist (rowid) ON DELETE CASCADE ON UPDATE CASCADE);
DROP TABLE referral;
CREATE TABLE referral (rowid INTEGER PRIMARY KEY NOT NULL, amblist_rowid INTEGER REFERENCES amblist (rowid) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, type INTEGER NOT NULL, number INTEGER, nrn TEXT, lrn TEXT, date TEXT NOT NULL, reason INTEGER, diag_main TEXT NOT NULL, diag_add TEXT, comorb_main TEXT, comorb_add TEXT, tooth INTEGER, reason_119 INTEGER, motives_119 TEXT, spec_119 INTEGER);
PRAGMA user_version = 8;